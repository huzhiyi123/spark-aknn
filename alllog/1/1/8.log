    usesift = False bruteForce()
<class 'h5py._hl.files.File'>
<KeysViewHDF5 ['distances', 'neighbors', 'test', 'train']>
predict.count() 10000
root
 |-- id: integer (nullable = false)
 |-- approximate: array (nullable = true)
 |    |-- element: struct (containsNull = true)
 |    |    |-- neighbor: integer (nullable = false)
 |    |    |-- distance: double (nullable = false)

timeUsed:  222720.65901756287 fit time 12821.341037750244
hello world bruteForce

testdoublekmeansHnswV2()
<class 'h5py._hl.files.File'>
<KeysViewHDF5 ['distances', 'neighbors', 'test', 'train']>
centroids1 (8, 784)
centroids2 (80, 784)
Traceback (most recent call last):
  File "/aknn/test/testdoublekmeans.py", line 427, in <module>
    testdoublekmeansHnswV2()
  File "/aknn/test/testdoublekmeans.py", line 342, in testdoublekmeansHnswV2
    df[partitionreal]=df[partitioncolname].apply(lambda x:mapx(x))
  File "/usr/local/lib/python3.5/dist-packages/pandas/core/series.py", line 4045, in apply
    mapped = lib.map_infer(values, f, convert=convert_dtype)
  File "pandas/_libs/lib.pyx", line 2228, in pandas._libs.lib.map_infer
  File "/aknn/test/testdoublekmeans.py", line 342, in <lambda>
    df[partitionreal]=df[partitioncolname].apply(lambda x:mapx(x))
  File "/aknn/test/testdoublekmeans.py", line 340, in mapx
    x = partitionmap[x]
IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices
maxelement = 100000000
k=10
partitionnum=8
topkPartitionNum=3

sc = 1
m = int(50)
distanceFunction='cosine'
kmeanstrainrate=0.05

efConstruction=35
ef = int(4*22)
usesift=True

kmeanspath="/aknn/kmeans/"

gistlist=["gistpartition.csv","gistcentroids2.csv","gistcentroids1.csv"]  
siftlist=["siftpartition.csv","siftcentroids1.csv","siftcentroids2.csv"]

"""
datapath="/my/siftsmall/"
traindatapath=datapath+"siftsmall_base.fvecs"
querydatapath=datapath+"siftsmall_query.fvecs"
querygroundtruthpath=datapath+"siftsmall_groundtruth.ivecs"
"""
datapath="/data/"
traindatapath=datapath+"sift_base.fvecs"
querydatapath=datapath+"sift_query.fvecs"
querygroundtruthpath=datapath+"sift_groundtruth.ivecs"


gistpath="/data/mnist.hdf5"
# ef=10, efConstruction=200


def initparams():
    global maxelement,k,partitionnum,topkPartitionNum,ef,m,distanceFunction,kmeanstrainraten,efConstruction,usesift
    maxelement = 100000000
    k=10
    partitionnum=8
    topkPartitionNum=5
    
    sc = 1
    m = int(50)
    distanceFunction='cosine'
    kmeanstrainrate=0.05
    efConstruction=85
    ef = efConstruction
    usesift=True